{"version":3,"sources":["hooks/form.js","components/todo/form.js","context/context.js","components/todo/pagination.js","components/todo/list.js","assets/logo-todo.png","hooks/ajax.js","components/todo/todo.js","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","e","preventDefault","target","reset","name","value","TodoForm","props","form","handleSubmit","handleChange","Form","onSubmit","Card","Img","src","alt","ImgOverlay","Body","Title","Group","Label","Control","size","required","placeholder","onChange","type","as","Button","variant","SettingContext","React","createContext","SettingsProvider","displayCount","setDisplayCount","state","totalTasks","setTotalTasks","Provider","children","Pagination","tasksPerPage","paginate","pageNumbers","i","Math","ceil","push","className","map","number","onClick","href","TodoList","context","useContext","currentPage","setCurrentPage","filteredList","list","sort","leftItem","rightItem","complete","indexOfLastTask","indexOfFirstTask","currentTasks","slice","length","item","toString","Toast","Header","closeButton","Badge","priority","handleDelete","_id","handleComplete","text","notes","pageNumber","useAjax","todoAPI","a","axios","get","allItems","items","data","post","newItem","id","filter","put","updatedItem","listItem","console","error","delete","el","ToDo","setList","getItems","addNewItem","updateItem","deleteItem","_addItem","log","_putItem","update","_deleteItem","del","useEffect","document","title","logo","class","date","Date","day","getDate","month","getMonth","weekDay","getDay","fullDate","App","Main","Component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c3b457dd.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (callback) => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      e.target.reset();\n      callback(values);\n  };\n\n  const handleChange = (e) => {\n    setValues((values) => ({ ...values, [e.target.name]: e.target.value }));\n  };\n\n  return [handleSubmit, handleChange, values];\n};\n\nexport default useForm;","import React, { useEffect, useState } from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useForm from '../../hooks/form';\n\nfunction TodoForm(props) {\n\n  const [ handleSubmit, handleChange ] = useForm(todo)\n\n  function todo(form){\n    props.handleSubmit(form);\n  }\n\n\n  return (\n    <>\n    <Form onSubmit={handleSubmit}>\n      <Card>\n        <Card.Img src=\"https://images.pexels.com/photos/4359106/pexels-photo-4359106.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" alt=\"Card image\"/>\n          <Card.ImgOverlay>\n            <Card.Body>\n              <Card.Title>Add ToDo Item</Card.Title>\n              <Form.Group>\n                <Form.Label>New Task*</Form.Label>\n                <Form.Control size=\"lg\" name=\"text\" required  placeholder=\"What do you need to do?\" onChange={handleChange}/>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Notes</Form.Label>\n                <Form.Control name=\"notes\" type=\"text\" placeholder=\"Additional Info\" onChange={handleChange}/>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Priority*</Form.Label>\n                <Form.Control as=\"select\" size=\"sm\" name=\"priority\" required onChange={handleChange}>\n                  <option>Choose priority of the task</option>\n                  <option value=\"High !!!\">High !!!</option>\n                  <option value=\"Medium !!\">Medium !!</option>\n                  <option value=\"Low !\">Low !</option>\n                  <option value=\"None\">None</option> \n                </Form.Control>\n              </Form.Group>\n              <Button variant=\"primary\" size=\"lg\" type=\"submit\">Add New Task</Button>\n            </Card.Body>\n          </Card.ImgOverlay>\n      </Card>\n    </Form>\n    </>\n  )\n}\n\nexport default TodoForm;\n\n","import React, { useState } from 'react';\n\nexport const SettingContext = React.createContext();\n\nfunction SettingsProvider(props){\n\n  const [displayCount, setDisplayCount] = useState(3);\n  const [totalTasks, setTotalTasks] = useState(0);\n\n\n  const state = {\n    displayCount,\n    totalTasks,\n    setDisplayCount,\n    setTotalTasks\n  }\n \n    return (\n      <SettingContext.Provider value={state}>\n        {props.children}\n      </SettingContext.Provider>\n    );\n}\n\nexport default SettingsProvider;","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst Pagination = ({ tasksPerPage, totalTasks, paginate }) => {\n  const pageNumbers = [];\n\n  for(let i = 1; i <= Math.ceil(totalTasks / tasksPerPage); i++){\n    pageNumbers.push(i);\n  }\n\n  return (\n    <section>\n      <ul className=\"pagination\">\n        {pageNumbers.map(number => (\n          <li key={number} className=\"page-item\">\n          <Button variant=\"outline-dark\" onClick={() => paginate(number)} href=\"#\">\n            {number}\n          </Button>\n          </li>\n        ))}\n        \n      </ul>\n    </section>\n  )\n}\n\nexport default Pagination;","import React, { useState, useContext } from 'react';\nimport { SettingContext } from '../../context/context.js'\nimport Pagination from './pagination.js'\n\n// import ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Toast from 'react-bootstrap/Toast';\nimport Badge from 'react-bootstrap/Badge';\n\nfunction TodoList(props) {\n\n  const context = useContext(SettingContext);\n  const [currentPage, setCurrentPage] = useState(1)\n\n\n\n  const filteredList = props.list.sort((leftItem, rightItem) => {\n    if(rightItem.complete > leftItem.complete){\n      return -1;\n    }else if(rightItem.complete < leftItem.complete){\n      return 1;\n    }else{\n      return 0;\n    }\n  })\n\n  const indexOfLastTask = currentPage * context.displayCount;\n  const indexOfFirstTask = indexOfLastTask - context.displayCount;\n  const currentTasks = filteredList.slice(indexOfFirstTask, indexOfLastTask);\n  context.setTotalTasks(filteredList.length);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    return (\n        <section>\n          <ul>\n            {currentTasks.map(item => (\n              <li key={item._id} className={`complete-${item.complete.toString()}`}>\n                <Toast>\n                  <Toast.Header closeButton={false}>\n                    <Badge className={!item.complete ? \"completeBadge\" : \"pendingBadge\"}>\n                    {!item.complete ? \"Pending\" : \"Complete\"}\n                    </Badge>\n                    <strong>Priority: {item.priority}</strong>\n                    <Button className=\"btn-close\" onClick={() => props.handleDelete(item._id)}>X</Button>\n                  </Toast.Header>\n                  <Toast.Body onClick={() => props.handleComplete(item._id)}>\n                    <h3>{item.text}</h3>\n                    <small>\n                    Notes:  {item.notes}\n                    </small>\n\n                  </Toast.Body>\n                </Toast>\n              </li>\n            ))}\n          </ul>\n          <Pagination\n          tasksPerPage={context.displayCount}\n          totalTasks={context.totalTasks}\n          paginate={paginate} />\n      </section>\n      \n    )\n}\n\nexport default TodoList;\n\n\n\n","export default __webpack_public_path__ + \"static/media/logo-todo.b23f21c9.png\";","import axios from \"axios\";\n\nconst useAjax = (list) => {\n  // const todoAPI = \"https://api-js401.herokuapp.com/api/v1/todo\";\n  const todoAPI = 'https://barysevich-server-api.herokuapp.com/api/v1/todo'\n\n  const getItems = async (callback) => {\n    let allItems = await axios.get(todoAPI)\n    let items = allItems.data;\n    callback(items)\n  };\n\n  const addNewItem = async (item, callback) => {\n    item.complete = false;\n    let newItem = await axios.post(todoAPI, item);\n    callback(newItem.data)\n  }\n\n  const updateItem = async(id, callback) => {\n    try {\n      let item = list.filter((i) => i._id === id)[0] || {};\n      if (item._id) {\n        item.complete = !item.complete;\n        let updatedItem = await axios.put(`${todoAPI}/${id}`, item);\n        let data = updatedItem.data;\n        callback(\n          list.map((listItem) => (listItem._id === data._id ? data : listItem))\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const deleteItem = async (id, callback) => {\n    try {\n      let item = list.filter((i) => i._id === id)[0] || {};\n      await axios.delete(`${todoAPI}/${id}`);\n      callback(list.filter((el) => el._id !== item._id));\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return [getItems, addNewItem, updateItem, deleteItem]\n};\n\nexport default useAjax;","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport axios from 'axios'\nimport logo from '../../assets/logo-todo.png'\n\nimport './todo.scss';\nimport useAjax from '../../hooks/ajax.js';\n\n// const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\nconst todoAPI= 'https://barysevich-server-api.herokuapp.com/api/v1/todo'\n\nfunction ToDo(props) {\n  \n  const [list, setList] = useState([])\n\n  const [getItems, addNewItem, updateItem, deleteItem] = useAjax(list)\n\n \n  const _addItem = async (item) => {\n    addNewItem(item, (newItem) => setList([...list, newItem]))\n    console.log(item)\n\n  }\n\n  const _putItem = async (id) => {\n    updateItem(id, (update) => setList(update));\n  };\n\n  const _deleteItem = async (id) => {\n    deleteItem(id, (del) => setList(del));\n  };\n\n  // GET ALL DATA FROM DB\n  // FETCH DATA IS SIDE EFFECT\n  useEffect(() => {\n    getItems((items) => setList(items))\n  }, []);\n\n  useEffect(() => {\n    if (list.length >= 1) { document.title = `To Do List: ${list.filter(item => !item.complete).length}`};\n  }, [list]);\n\n\n  let fullDate = () => {\n    let date = new Date();\n    let day = date.getDate();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let month = months[date.getMonth()];\n    let days = [\"Monday\", \"Tuesday\", \"Wednsday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n    let weekDay = days[date.getDay()]\n    return `${weekDay} / ${day}th ${month}`\n  }\n\n  return (\n    <>\n      <header>\n      {/* <img src={logo} alt=\"Logo\" /> */}\n        <nav>\n        <img src={logo} alt=\"Logo\" />\n          <ul>\n            <li>Home</li>\n            <li>Settings</li>\n          </ul>\n        </nav>\n        \n      </header>\n\n      <main>\n        <section class=\"top\">\n        <h2>\n          ToDo List Manager ({list.filter(item => !item.complete).length} / {list.length})\n        </h2>\n        <p>{fullDate()}</p>\n\n        </section>\n\n        <section className=\"main\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem}/>\n        </div>\n\n        <div>\n          <TodoList list={list} handleComplete={_putItem} handleDelete={_deleteItem} />\n        </div>\n      </section>\n\n      </main>\n\n      <footer>\n        <p><p> 2021 &copy; Barysevich Yuliya</p></p>\n      </footer>\n\n      </>\n\n  )\n}\n\nexport default ToDo;\n\n\n// OLD CODE\n// OLD CODE\n// OLD CODE\n\n  // const addItem = (item) => {\n  //   item._id = Math.random();\n  //   item.complete = false;\n  //   setList([...list, item]);\n  // };\n\n  // const addItem = async (item) => {\n  //   await axios({\n  //     method: 'post',\n  //     url: todoAPI,\n  //     data: item,\n  //     mode: 'cors',\n  //     headers: { 'Content-Type': 'application/json' },\n  //   })\n  //   .then(savedItem => {\n  //     setList([...list, savedItem])\n  //     })\n    \n  // }\n\n  // const _toggleComplete = (id) => {\n  //   let item = list.filter(i => i._id === id)[0] || {};\n\n  //   if(item._id) {\n  //     item.complete = !item.complete;\n  //     let newList = list.map(listItem => listItem._id === item._id ? item :listItem);\n  //     setList(newList) \n  //   }\n  // }\n\n\n  // const _deleteItem = async (id) => {\n  //   let item = list.filter(i => i._id === id)[0] || {};\n\n  //   if(item._id){\n  //     await axios({\n  //       method: 'delete',\n  //       url: `${todoAPI}/${id}`,\n  //     })\n\n  //   }\n    \n    \n  //   setList(newList)\n  // }\n\n  \n\n  // useEffect(() => {\n  //   let list = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'}\n  //   ];\n\n  //   setList(list)\n    \n  // }, [])\n\n  \n\n// class ToDo extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: []\n//     };\n//   }\n\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item] });\n//   };\n\n//   toggleComplete = id => {\n\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n//     if(item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item :listItem);\n//       this.setState({list}) \n//     }\n//   };\n\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'}\n//     ];\n\n//     this.setState({list})\n//   }\n\n//   render() {\n//     return (\n//       <>\n//       <header>\n//         <h2>\n//           There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//         </h2>\n//       </header>\n\n//       <section>\n\n//         <div>\n//           <TodoForm handleSubmit={this.addItem}/>\n//         </div>\n\n//         <div>\n//           <TodoList list={this.state.list} handleComplete={this.toggleComplete} />\n//         </div>\n//       </section>\n//       </>\n//     )\n//   }\n// }\n\n","import React from 'react';\nimport ToDo from './components/todo/todo.js';\nimport SettingsProvider from './context/context.js'\n\n\nfunction App () {\n  return (\n    <SettingsProvider>\n      \n        <ToDo />\n      \n    </SettingsProvider>  \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement)"],"sourceRoot":""}